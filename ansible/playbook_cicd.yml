
#Children names:
#aws-ubuntu-test
#aws-ubuntu-prod

- hosts : aws-ubuntu-test
  become : yes
  gather_facts : False
  tasks :
    - name : Bootstrap a host without python installed
      raw : test -e /usr/bin/python || (apt install -y python)

    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Pull docker image
      shell: docker pull filippandza/medical-images-client

    - name: Run docker image
      shell: docker run filippandza/medical-images-client -p 4000:4000
      
    #- name: Download docker-compose
    #  shell: curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

    #- name: Apply executable permissions to the binary
    #  shell: chmod +x /usr/local/bin/docker-compose

    #- name: Copy Docker-Compose file
    #  become: no
    #  copy:
    #    src: ./test/docker-compose.yml
    #    dest: ~/docker-compose.yml
    #    mode: '0644'#
    
    #- name: Start services with docker-compose
    #  shell: docker-compose up -d
